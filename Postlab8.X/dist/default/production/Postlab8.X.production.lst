

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 12:20:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0009                     _PORTE	set	9
   213  0007                     _PORTC	set	7
   214  0001                     _TMR0	set	1
   215  0008                     _PORTD	set	8
   216  000B                     _INTCONbits	set	11
   217  001E                     _ADRESH	set	30
   218  0005                     _PORTA	set	5
   219  001F                     _ADCON0bits	set	31
   220  000C                     _PIR1bits	set	12
   221  009F                     _ADCON1bits	set	159
   222  0081                     _OPTION_REGbits	set	129
   223  008C                     _PIE1bits	set	140
   224  008F                     _OSCCONbits	set	143
   225  0089                     _TRISE	set	137
   226  0088                     _TRISD	set	136
   227  0087                     _TRISC	set	135
   228  0085                     _TRISA	set	133
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233  0011                     start_initialization:	
   234                           ; #config settings
   235                           
   236  0011                     __initialization:
   237                           
   238                           ; Clear objects allocated to COMMON
   239  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  0012  1283               	bcf	3,5	;RP0=0, select bank0
   243  0013  1303               	bcf	3,6	;RP1=0, select bank0
   244  0014  01B1               	clrf	__pbssBANK0& (0+127)
   245  0015  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   246  0016  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   247  0017  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   248  0018  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   249  0019  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   250  001A  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   251  001B  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   252  001C  01B9               	clrf	(__pbssBANK0+8)& (0+127)
   253  001D                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  001D                     __end_of__initialization:
   257  001D  0183               	clrf	3
   258  001E  120A  118A  2A4B   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMMON
   261  0078                     __pbssCOMMON:
   262  0078                     _turno:
   263  0078                     	ds	1
   264                           
   265                           	psect	bssBANK0
   266  0031                     __pbssBANK0:
   267  0031                     _cuenta2:
   268  0031                     	ds	2
   269  0033                     _display2:
   270  0033                     	ds	1
   271  0034                     _display1:
   272  0034                     	ds	1
   273  0035                     _display0:
   274  0035                     	ds	1
   275  0036                     _centenas:
   276  0036                     	ds	1
   277  0037                     _decenas:
   278  0037                     	ds	1
   279  0038                     _unidades:
   280  0038                     	ds	1
   281  0039                     _cuenta:
   282  0039                     	ds	1
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:
   286  0070                     ?_setup:
   287  0070                     ?_ValoresDisplay:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_Displayturno:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_isr:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_ArregloNumero:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0070                     	ds	5
   308  0075                     ??_setup:
   309  0075                     ??_Displayturno:	
   310                           ; 1 bytes @ 0x5
   311                           
   312  0075                     ??_ArregloNumero:	
   313                           ; 1 bytes @ 0x5
   314                           
   315  0075                     ??___wmul:	
   316                           ; 1 bytes @ 0x5
   317                           
   318  0075                     ??___awmod:	
   319                           ; 1 bytes @ 0x5
   320                           
   321  0075                     ___wmul@product:	
   322                           ; 1 bytes @ 0x5
   323                           
   324                           
   325                           ; 2 bytes @ 0x5
   326  0075                     	ds	1
   327  0076                     ___awmod@counter:
   328                           
   329                           ; 1 bytes @ 0x6
   330  0076                     	ds	1
   331  0077                     ??___awdiv:
   332  0077                     ArregloNumero@numero:	
   333                           ; 1 bytes @ 0x7
   334                           
   335  0077                     ___awmod@sign:	
   336                           ; 1 bytes @ 0x7
   337                           
   338                           
   339                           ; 1 bytes @ 0x7
   340  0077                     	ds	1
   341                           
   342                           	psect	cstackBANK0
   343  0020                     __pcstackBANK0:
   344  0020                     ?___wmul:
   345  0020                     ?___awmod:	
   346                           ; 2 bytes @ 0x0
   347                           
   348  0020                     ___wmul@multiplier:	
   349                           ; 2 bytes @ 0x0
   350                           
   351  0020                     ___awmod@divisor:	
   352                           ; 2 bytes @ 0x0
   353                           
   354                           
   355                           ; 2 bytes @ 0x0
   356  0020                     	ds	2
   357  0022                     ___wmul@multiplicand:
   358  0022                     ___awmod@dividend:	
   359                           ; 2 bytes @ 0x2
   360                           
   361                           
   362                           ; 2 bytes @ 0x2
   363  0022                     	ds	2
   364  0024                     ?___awdiv:
   365  0024                     ___awdiv@divisor:	
   366                           ; 2 bytes @ 0x4
   367                           
   368                           
   369                           ; 2 bytes @ 0x4
   370  0024                     	ds	2
   371  0026                     ___awdiv@dividend:
   372                           
   373                           ; 2 bytes @ 0x6
   374  0026                     	ds	2
   375  0028                     ___awdiv@counter:
   376                           
   377                           ; 1 bytes @ 0x8
   378  0028                     	ds	1
   379  0029                     ___awdiv@sign:
   380                           
   381                           ; 1 bytes @ 0x9
   382  0029                     	ds	1
   383  002A                     ___awdiv@quotient:
   384                           
   385                           ; 2 bytes @ 0xA
   386  002A                     	ds	2
   387  002C                     ??_ValoresDisplay:
   388                           
   389                           ; 1 bytes @ 0xC
   390  002C                     	ds	2
   391  002E                     ValoresDisplay@cociente0:
   392                           
   393                           ; 2 bytes @ 0xE
   394  002E                     	ds	2
   395  0030                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x10
   398  0030                     	ds	1
   399                           
   400                           	psect	maintext
   401  024B                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 105 in file "Postlab8main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B00/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          0       1       0       0       0
   424 ;;      Totals:         0       1       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels required when called: 3
   427 ;; This function calls:
   428 ;;		_Displayturno
   429 ;;		_ValoresDisplay
   430 ;;		_setup
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _main
   438  024B                     _main:
   439  024B                     l1512:	
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   442                           
   443                           
   444                           ;Postlab8main.c: 107:     setup();
   445  024B  120A  118A  21C9  120A  118A  	fcall	_setup
   446  0250                     l1514:
   447                           
   448                           ;Postlab8main.c: 108:     ADCON0bits.GO = 1;
   449  0250  1283               	bcf	3,5	;RP0=0, select bank0
   450  0251  1303               	bcf	3,6	;RP1=0, select bank0
   451  0252  149F               	bsf	31,1	;volatile
   452  0253                     l1516:
   453                           
   454                           ;Postlab8main.c: 110:     {;Postlab8main.c: 111:         ValoresDisplay();
   455  0253  120A  118A  2021  120A  118A  	fcall	_ValoresDisplay
   456  0258                     l1518:
   457                           
   458                           ;Postlab8main.c: 112:         Displayturno();
   459  0258  120A  118A  22AA  120A  118A  	fcall	_Displayturno
   460  025D                     l1520:
   461                           
   462                           ;Postlab8main.c: 114:         if (ADCON0bits.GO == 0){
   463  025D  1283               	bcf	3,5	;RP0=0, select bank0
   464  025E  1303               	bcf	3,6	;RP1=0, select bank0
   465  025F  189F               	btfsc	31,1	;volatile
   466  0260  2A62               	goto	u801
   467  0261  2A63               	goto	u800
   468  0262                     u801:
   469  0262  2A53               	goto	l1516
   470  0263                     u800:
   471  0263                     l1522:
   472                           
   473                           ;Postlab8main.c: 115:             if(ADCON0bits.CHS == 6)
   474  0263  0C1F               	rrf	31,w	;volatile
   475  0264  00B0               	movwf	??_main
   476  0265  0C30               	rrf	??_main,w
   477  0266  390F               	andlw	15
   478  0267  3A06               	xorlw	6
   479  0268  1D03               	skipz
   480  0269  2A6B               	goto	u811
   481  026A  2A6C               	goto	u810
   482  026B                     u811:
   483  026B  2A71               	goto	l1526
   484  026C                     u810:
   485  026C                     l1524:
   486                           
   487                           ;Postlab8main.c: 116:                 ADCON0bits.CHS = 5;
   488  026C  081F               	movf	31,w	;volatile
   489  026D  39C3               	andlw	-61
   490  026E  3814               	iorlw	20
   491  026F  009F               	movwf	31	;volatile
   492  0270  2A75               	goto	l1528
   493  0271                     l1526:
   494                           
   495                           ;Postlab8main.c: 118:                 ADCON0bits.CHS = 6;
   496  0271  081F               	movf	31,w	;volatile
   497  0272  39C3               	andlw	-61
   498  0273  3818               	iorlw	24
   499  0274  009F               	movwf	31	;volatile
   500  0275                     l1528:
   501                           
   502                           ;Postlab8main.c: 120:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   503  0275  300F               	movlw	15
   504  0276  1283               	bcf	3,5	;RP0=0, select bank0
   505  0277  1303               	bcf	3,6	;RP1=0, select bank0
   506  0278  00B0               	movwf	??_main
   507  0279                     u827:
   508  0279  0BB0               	decfsz	??_main,f
   509  027A  2A79               	goto	u827
   510  027B  2A7C               	nop2
   511  027C                     l1530:
   512                           
   513                           ;Postlab8main.c: 121:             ADCON0bits.GO = 1;
   514  027C  1283               	bcf	3,5	;RP0=0, select bank0
   515  027D  1303               	bcf	3,6	;RP1=0, select bank0
   516  027E  149F               	bsf	31,1	;volatile
   517  027F  2A53               	goto	l1516
   518  0280  120A  118A  280E   	ljmp	start
   519  0283                     __end_of_main:
   520                           
   521                           	psect	text1
   522  01C9                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 131 in file "Postlab8main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          1       0       0       0       0
   542 ;;      Totals:         1       0       0       0       0
   543 ;;Total ram usage:        1 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _setup
   555  01C9                     _setup:
   556  01C9                     l886:	
   557                           ;incstack = 0
   558                           ; Regs used in _setup: [wreg+status,2+status,0]
   559                           
   560                           
   561                           ;Postlab8main.c: 134:     ANSEL = 0b01100000;
   562  01C9  3060               	movlw	96
   563  01CA  1683               	bsf	3,5	;RP0=1, select bank3
   564  01CB  1703               	bsf	3,6	;RP1=1, select bank3
   565  01CC  0088               	movwf	8	;volatile
   566  01CD                     l888:
   567                           
   568                           ;Postlab8main.c: 135:     ANSELH = 0;
   569  01CD  0189               	clrf	9	;volatile
   570  01CE                     l890:
   571                           
   572                           ;Postlab8main.c: 137:     TRISA = 0;
   573  01CE  1683               	bsf	3,5	;RP0=1, select bank1
   574  01CF  1303               	bcf	3,6	;RP1=0, select bank1
   575  01D0  0185               	clrf	5	;volatile
   576  01D1                     l892:
   577                           
   578                           ;Postlab8main.c: 138:     TRISC = 0;
   579  01D1  0187               	clrf	7	;volatile
   580  01D2                     l894:
   581                           
   582                           ;Postlab8main.c: 139:     TRISD = 0;
   583  01D2  0188               	clrf	8	;volatile
   584                           
   585                           ;Postlab8main.c: 140:     TRISE = 0b011;
   586  01D3  3003               	movlw	3
   587  01D4  0089               	movwf	9	;volatile
   588  01D5                     l896:
   589                           
   590                           ;Postlab8main.c: 142:     PORTA = 0;
   591  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   592  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   593  01D7  0185               	clrf	5	;volatile
   594  01D8                     l898:
   595                           
   596                           ;Postlab8main.c: 143:     PORTC = 0;
   597  01D8  0187               	clrf	7	;volatile
   598  01D9                     l900:
   599                           
   600                           ;Postlab8main.c: 144:     PORTD = 0;
   601  01D9  0188               	clrf	8	;volatile
   602  01DA                     l902:
   603                           
   604                           ;Postlab8main.c: 145:     PORTE = 0;
   605  01DA  0189               	clrf	9	;volatile
   606  01DB                     l904:
   607                           
   608                           ;Postlab8main.c: 148:     OSCCONbits.IRCF = 0b0110;
   609  01DB  1683               	bsf	3,5	;RP0=1, select bank1
   610  01DC  1303               	bcf	3,6	;RP1=0, select bank1
   611  01DD  080F               	movf	15,w	;volatile
   612  01DE  398F               	andlw	-113
   613  01DF  3860               	iorlw	96
   614  01E0  008F               	movwf	15	;volatile
   615  01E1                     l906:
   616                           
   617                           ;Postlab8main.c: 149:     OSCCONbits.SCS = 1;
   618  01E1  140F               	bsf	15,0	;volatile
   619  01E2                     l908:
   620                           
   621                           ;Postlab8main.c: 152:     PIR1bits.ADIF = 0;
   622  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   623  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   624  01E4  130C               	bcf	12,6	;volatile
   625  01E5                     l910:
   626                           
   627                           ;Postlab8main.c: 153:     PIE1bits.ADIE = 1;
   628  01E5  1683               	bsf	3,5	;RP0=1, select bank1
   629  01E6  1303               	bcf	3,6	;RP1=0, select bank1
   630  01E7  170C               	bsf	12,6	;volatile
   631  01E8                     l912:
   632                           
   633                           ;Postlab8main.c: 154:     INTCONbits.PEIE = 1;
   634  01E8  170B               	bsf	11,6	;volatile
   635  01E9                     l914:
   636                           
   637                           ;Postlab8main.c: 155:     INTCONbits.GIE = 1;
   638  01E9  178B               	bsf	11,7	;volatile
   639  01EA                     l916:
   640                           
   641                           ;Postlab8main.c: 156:     INTCONbits.T0IE = 1;
   642  01EA  168B               	bsf	11,5	;volatile
   643  01EB                     l918:
   644                           
   645                           ;Postlab8main.c: 157:     INTCONbits.T0IF = 0;
   646  01EB  110B               	bcf	11,2	;volatile
   647  01EC                     l920:
   648                           
   649                           ;Postlab8main.c: 160:     OPTION_REGbits.PS0 = 1;
   650  01EC  1401               	bsf	1,0	;volatile
   651  01ED                     l922:
   652                           
   653                           ;Postlab8main.c: 161:     OPTION_REGbits.PS1 = 1;
   654  01ED  1481               	bsf	1,1	;volatile
   655  01EE                     l924:
   656                           
   657                           ;Postlab8main.c: 162:     OPTION_REGbits.PS2 = 0;
   658  01EE  1101               	bcf	1,2	;volatile
   659  01EF                     l926:
   660                           
   661                           ;Postlab8main.c: 163:     OPTION_REGbits.PSA = 0;
   662  01EF  1181               	bcf	1,3	;volatile
   663  01F0                     l928:
   664                           
   665                           ;Postlab8main.c: 164:     OPTION_REGbits.T0CS = 0;
   666  01F0  1281               	bcf	1,5	;volatile
   667  01F1                     l930:
   668                           
   669                           ;Postlab8main.c: 165:     OPTION_REGbits.T0SE = 0;
   670  01F1  1201               	bcf	1,4	;volatile
   671  01F2                     l932:
   672                           
   673                           ;Postlab8main.c: 166:     TMR0 = 131;
   674  01F2  3083               	movlw	131
   675  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   676  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   677  01F5  0081               	movwf	1	;volatile
   678  01F6                     l934:
   679                           
   680                           ;Postlab8main.c: 169:     ADCON1bits.ADFM = 0;
   681  01F6  1683               	bsf	3,5	;RP0=1, select bank1
   682  01F7  1303               	bcf	3,6	;RP1=0, select bank1
   683  01F8  139F               	bcf	31,7	;volatile
   684  01F9                     l936:
   685                           
   686                           ;Postlab8main.c: 170:     ADCON1bits.VCFG1 = 0;
   687  01F9  129F               	bcf	31,5	;volatile
   688  01FA                     l938:
   689                           
   690                           ;Postlab8main.c: 171:     ADCON1bits.VCFG0 = 0;
   691  01FA  121F               	bcf	31,4	;volatile
   692                           
   693                           ;Postlab8main.c: 173:     ADCON0bits.ADCS = 0b01;
   694  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   695  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   696  01FD  081F               	movf	31,w	;volatile
   697  01FE  393F               	andlw	-193
   698  01FF  3840               	iorlw	64
   699  0200  009F               	movwf	31	;volatile
   700                           
   701                           ;Postlab8main.c: 174:     ADCON0bits.CHS = 5;
   702  0201  081F               	movf	31,w	;volatile
   703  0202  39C3               	andlw	-61
   704  0203  3814               	iorlw	20
   705  0204  009F               	movwf	31	;volatile
   706  0205                     l940:
   707                           
   708                           ;Postlab8main.c: 175:     ADCON0bits.ADON = 1;
   709  0205  141F               	bsf	31,0	;volatile
   710  0206                     l942:
   711                           
   712                           ;Postlab8main.c: 176:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   713  0206  3010               	movlw	16
   714  0207  00F5               	movwf	??_setup
   715  0208                     u837:
   716  0208  0BF5               	decfsz	??_setup,f
   717  0209  2A08               	goto	u837
   718  020A  0000               	nop
   719  020B                     l94:
   720  020B  0008               	return
   721  020C                     __end_of_setup:
   722                           
   723                           	psect	text2
   724  0021                     __ptext2:	
   725 ;; *************** function _ValoresDisplay *****************
   726 ;; Defined at:
   727 ;;		line 238 in file "Postlab8main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  cociente0       2   14[BANK0 ] int 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       2       0       0       0
   743 ;;      Temps:          0       2       0       0       0
   744 ;;      Totals:         0       4       0       0       0
   745 ;;Total ram usage:        4 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 2
   748 ;; This function calls:
   749 ;;		_ArregloNumero
   750 ;;		___awdiv
   751 ;;		___awmod
   752 ;;		___wmul
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _ValoresDisplay
   760  0021                     _ValoresDisplay:
   761  0021                     l1502:	
   762                           ;incstack = 0
   763                           ; Regs used in _ValoresDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   764                           
   765                           
   766                           ;Postlab8main.c: 241:         cuenta2 = (int)cuenta*100/51;
   767  0021  3033               	movlw	51
   768  0022  1283               	bcf	3,5	;RP0=0, select bank0
   769  0023  1303               	bcf	3,6	;RP1=0, select bank0
   770  0024  00A4               	movwf	___awdiv@divisor
   771  0025  3000               	movlw	0
   772  0026  00A5               	movwf	___awdiv@divisor+1
   773  0027  0839               	movf	_cuenta,w
   774  0028  00AC               	movwf	??_ValoresDisplay
   775  0029  01AD               	clrf	??_ValoresDisplay+1
   776  002A  082C               	movf	??_ValoresDisplay,w
   777  002B  00A0               	movwf	___wmul@multiplier
   778  002C  082D               	movf	??_ValoresDisplay+1,w
   779  002D  00A1               	movwf	___wmul@multiplier+1
   780  002E  3064               	movlw	100
   781  002F  00A2               	movwf	___wmul@multiplicand
   782  0030  3000               	movlw	0
   783  0031  00A3               	movwf	___wmul@multiplicand+1
   784  0032  120A  118A  2283  120A  118A  	fcall	___wmul
   785  0037  1283               	bcf	3,5	;RP0=0, select bank0
   786  0038  1303               	bcf	3,6	;RP1=0, select bank0
   787  0039  0821               	movf	?___wmul+1,w
   788  003A  00A7               	movwf	___awdiv@dividend+1
   789  003B  0820               	movf	?___wmul,w
   790  003C  00A6               	movwf	___awdiv@dividend
   791  003D  120A  118A  20B6  120A  118A  	fcall	___awdiv
   792  0042  1283               	bcf	3,5	;RP0=0, select bank0
   793  0043  1303               	bcf	3,6	;RP1=0, select bank0
   794  0044  0825               	movf	?___awdiv+1,w
   795  0045  00B2               	movwf	_cuenta2+1
   796  0046  0824               	movf	?___awdiv,w
   797  0047  00B1               	movwf	_cuenta2
   798                           
   799                           ;Postlab8main.c: 243:         unidades = cuenta2%10;
   800  0048  300A               	movlw	10
   801  0049  00A0               	movwf	___awmod@divisor
   802  004A  3000               	movlw	0
   803  004B  00A1               	movwf	___awmod@divisor+1
   804  004C  0832               	movf	_cuenta2+1,w
   805  004D  00A3               	movwf	___awmod@dividend+1
   806  004E  0831               	movf	_cuenta2,w
   807  004F  00A2               	movwf	___awmod@dividend
   808  0050  120A  118A  211F  120A  118A  	fcall	___awmod
   809  0055  1283               	bcf	3,5	;RP0=0, select bank0
   810  0056  1303               	bcf	3,6	;RP1=0, select bank0
   811  0057  0820               	movf	?___awmod,w
   812  0058  00AC               	movwf	??_ValoresDisplay
   813  0059  082C               	movf	??_ValoresDisplay,w
   814  005A  00B8               	movwf	_unidades
   815                           
   816                           ;Postlab8main.c: 245:         int cociente0 = (int)(cuenta2/10);
   817  005B  300A               	movlw	10
   818  005C  00A4               	movwf	___awdiv@divisor
   819  005D  3000               	movlw	0
   820  005E  00A5               	movwf	___awdiv@divisor+1
   821  005F  0832               	movf	_cuenta2+1,w
   822  0060  00A7               	movwf	___awdiv@dividend+1
   823  0061  0831               	movf	_cuenta2,w
   824  0062  00A6               	movwf	___awdiv@dividend
   825  0063  120A  118A  20B6  120A  118A  	fcall	___awdiv
   826  0068  1283               	bcf	3,5	;RP0=0, select bank0
   827  0069  1303               	bcf	3,6	;RP1=0, select bank0
   828  006A  0825               	movf	?___awdiv+1,w
   829  006B  00AF               	movwf	ValoresDisplay@cociente0+1
   830  006C  0824               	movf	?___awdiv,w
   831  006D  00AE               	movwf	ValoresDisplay@cociente0
   832                           
   833                           ;Postlab8main.c: 247:         decenas = cociente0%10;
   834  006E  300A               	movlw	10
   835  006F  00A0               	movwf	___awmod@divisor
   836  0070  3000               	movlw	0
   837  0071  00A1               	movwf	___awmod@divisor+1
   838  0072  082F               	movf	ValoresDisplay@cociente0+1,w
   839  0073  00A3               	movwf	___awmod@dividend+1
   840  0074  082E               	movf	ValoresDisplay@cociente0,w
   841  0075  00A2               	movwf	___awmod@dividend
   842  0076  120A  118A  211F  120A  118A  	fcall	___awmod
   843  007B  1283               	bcf	3,5	;RP0=0, select bank0
   844  007C  1303               	bcf	3,6	;RP1=0, select bank0
   845  007D  0820               	movf	?___awmod,w
   846  007E  00AC               	movwf	??_ValoresDisplay
   847  007F  082C               	movf	??_ValoresDisplay,w
   848  0080  00B7               	movwf	_decenas
   849                           
   850                           ;Postlab8main.c: 249:         centenas = (int)(cociente0/10);
   851  0081  300A               	movlw	10
   852  0082  00A4               	movwf	___awdiv@divisor
   853  0083  3000               	movlw	0
   854  0084  00A5               	movwf	___awdiv@divisor+1
   855  0085  082F               	movf	ValoresDisplay@cociente0+1,w
   856  0086  00A7               	movwf	___awdiv@dividend+1
   857  0087  082E               	movf	ValoresDisplay@cociente0,w
   858  0088  00A6               	movwf	___awdiv@dividend
   859  0089  120A  118A  20B6  120A  118A  	fcall	___awdiv
   860  008E  1283               	bcf	3,5	;RP0=0, select bank0
   861  008F  1303               	bcf	3,6	;RP1=0, select bank0
   862  0090  0824               	movf	?___awdiv,w
   863  0091  00AC               	movwf	??_ValoresDisplay
   864  0092  082C               	movf	??_ValoresDisplay,w
   865  0093  00B6               	movwf	_centenas
   866  0094                     l1504:
   867                           
   868                           ;Postlab8main.c: 252:         display0 = ArregloNumero(unidades);
   869  0094  0838               	movf	_unidades,w
   870  0095  120A  118A  220C  120A  118A  	fcall	_ArregloNumero
   871  009A  1283               	bcf	3,5	;RP0=0, select bank0
   872  009B  1303               	bcf	3,6	;RP1=0, select bank0
   873  009C  00AC               	movwf	??_ValoresDisplay
   874  009D  082C               	movf	??_ValoresDisplay,w
   875  009E  00B5               	movwf	_display0
   876  009F                     l1506:
   877                           
   878                           ;Postlab8main.c: 253:         display1 = ArregloNumero(decenas);
   879  009F  0837               	movf	_decenas,w
   880  00A0  120A  118A  220C  120A  118A  	fcall	_ArregloNumero
   881  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   882  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   883  00A7  00AC               	movwf	??_ValoresDisplay
   884  00A8  082C               	movf	??_ValoresDisplay,w
   885  00A9  00B4               	movwf	_display1
   886  00AA                     l1508:
   887                           
   888                           ;Postlab8main.c: 254:         display2 = ArregloNumero(centenas);
   889  00AA  0836               	movf	_centenas,w
   890  00AB  120A  118A  220C  120A  118A  	fcall	_ArregloNumero
   891  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   892  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   893  00B2  00AC               	movwf	??_ValoresDisplay
   894  00B3  082C               	movf	??_ValoresDisplay,w
   895  00B4  00B3               	movwf	_display2
   896  00B5                     l122:
   897  00B5  0008               	return
   898  00B6                     __end_of_ValoresDisplay:
   899                           
   900                           	psect	text3
   901  0283                     __ptext3:	
   902 ;; *************** function ___wmul *****************
   903 ;; Defined at:
   904 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  multiplier      2    0[BANK0 ] unsigned int 
   907 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  product         2    5[COMMON] unsigned int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2    0[BANK0 ] unsigned int 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       4       0       0       0
   920 ;;      Locals:         2       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         2       4       0       0       0
   923 ;;Total ram usage:        6 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_ValoresDisplay
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function ___wmul
   935  0283                     ___wmul:
   936  0283                     l1406:	
   937                           ;incstack = 0
   938                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   939                           
   940  0283  01F5               	clrf	___wmul@product
   941  0284  01F6               	clrf	___wmul@product+1
   942  0285                     l1408:
   943  0285  1283               	bcf	3,5	;RP0=0, select bank0
   944  0286  1303               	bcf	3,6	;RP1=0, select bank0
   945  0287  1C20               	btfss	___wmul@multiplier,0
   946  0288  2A8A               	goto	u571
   947  0289  2A8B               	goto	u570
   948  028A                     u571:
   949  028A  2A91               	goto	l208
   950  028B                     u570:
   951  028B                     l1410:
   952  028B  0822               	movf	___wmul@multiplicand,w
   953  028C  07F5               	addwf	___wmul@product,f
   954  028D  1803               	skipnc
   955  028E  0AF6               	incf	___wmul@product+1,f
   956  028F  0823               	movf	___wmul@multiplicand+1,w
   957  0290  07F6               	addwf	___wmul@product+1,f
   958  0291                     l208:
   959  0291  3001               	movlw	1
   960  0292                     u585:
   961  0292  1003               	clrc
   962  0293  0DA2               	rlf	___wmul@multiplicand,f
   963  0294  0DA3               	rlf	___wmul@multiplicand+1,f
   964  0295  3EFF               	addlw	-1
   965  0296  1D03               	skipz
   966  0297  2A92               	goto	u585
   967  0298                     l1412:
   968  0298  3001               	movlw	1
   969  0299                     u595:
   970  0299  1003               	clrc
   971  029A  0CA1               	rrf	___wmul@multiplier+1,f
   972  029B  0CA0               	rrf	___wmul@multiplier,f
   973  029C  3EFF               	addlw	-1
   974  029D  1D03               	skipz
   975  029E  2A99               	goto	u595
   976  029F                     l1414:
   977  029F  0820               	movf	___wmul@multiplier,w
   978  02A0  0421               	iorwf	___wmul@multiplier+1,w
   979  02A1  1D03               	btfss	3,2
   980  02A2  2AA4               	goto	u601
   981  02A3  2AA5               	goto	u600
   982  02A4                     u601:
   983  02A4  2A85               	goto	l1408
   984  02A5                     u600:
   985  02A5                     l1416:
   986  02A5  0876               	movf	___wmul@product+1,w
   987  02A6  00A1               	movwf	?___wmul+1
   988  02A7  0875               	movf	___wmul@product,w
   989  02A8  00A0               	movwf	?___wmul
   990  02A9                     l210:
   991  02A9  0008               	return
   992  02AA                     __end_of___wmul:
   993                           
   994                           	psect	text4
   995  011F                     __ptext4:	
   996 ;; *************** function ___awmod *****************
   997 ;; Defined at:
   998 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  divisor         2    0[BANK0 ] int 
  1001 ;;  dividend        2    2[BANK0 ] int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  sign            1    7[COMMON] unsigned char 
  1004 ;;  counter         1    6[COMMON] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    0[BANK0 ] int 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       4       0       0       0
  1015 ;;      Locals:         2       0       0       0       0
  1016 ;;      Temps:          1       0       0       0       0
  1017 ;;      Totals:         3       4       0       0       0
  1018 ;;Total ram usage:        7 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_ValoresDisplay
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function ___awmod
  1030  011F                     ___awmod:
  1031  011F                     l1464:	
  1032                           ;incstack = 0
  1033                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1034                           
  1035  011F  01F7               	clrf	___awmod@sign
  1036  0120                     l1466:
  1037  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0122  1FA3               	btfss	___awmod@dividend+1,7
  1040  0123  2925               	goto	u711
  1041  0124  2926               	goto	u710
  1042  0125                     u711:
  1043  0125  292D               	goto	l1472
  1044  0126                     u710:
  1045  0126                     l1468:
  1046  0126  09A2               	comf	___awmod@dividend,f
  1047  0127  09A3               	comf	___awmod@dividend+1,f
  1048  0128  0AA2               	incf	___awmod@dividend,f
  1049  0129  1903               	skipnz
  1050  012A  0AA3               	incf	___awmod@dividend+1,f
  1051  012B                     l1470:
  1052  012B  01F7               	clrf	___awmod@sign
  1053  012C  0AF7               	incf	___awmod@sign,f
  1054  012D                     l1472:
  1055  012D  1FA1               	btfss	___awmod@divisor+1,7
  1056  012E  2930               	goto	u721
  1057  012F  2931               	goto	u720
  1058  0130                     u721:
  1059  0130  2936               	goto	l1476
  1060  0131                     u720:
  1061  0131                     l1474:
  1062  0131  09A0               	comf	___awmod@divisor,f
  1063  0132  09A1               	comf	___awmod@divisor+1,f
  1064  0133  0AA0               	incf	___awmod@divisor,f
  1065  0134  1903               	skipnz
  1066  0135  0AA1               	incf	___awmod@divisor+1,f
  1067  0136                     l1476:
  1068  0136  0820               	movf	___awmod@divisor,w
  1069  0137  0421               	iorwf	___awmod@divisor+1,w
  1070  0138  1903               	btfsc	3,2
  1071  0139  293B               	goto	u731
  1072  013A  293C               	goto	u730
  1073  013B                     u731:
  1074  013B  296B               	goto	l1494
  1075  013C                     u730:
  1076  013C                     l1478:
  1077  013C  01F6               	clrf	___awmod@counter
  1078  013D  0AF6               	incf	___awmod@counter,f
  1079  013E  294A               	goto	l1484
  1080  013F                     l1480:
  1081  013F  3001               	movlw	1
  1082  0140                     u745:
  1083  0140  1003               	clrc
  1084  0141  0DA0               	rlf	___awmod@divisor,f
  1085  0142  0DA1               	rlf	___awmod@divisor+1,f
  1086  0143  3EFF               	addlw	-1
  1087  0144  1D03               	skipz
  1088  0145  2940               	goto	u745
  1089  0146                     l1482:
  1090  0146  3001               	movlw	1
  1091  0147  00F5               	movwf	??___awmod
  1092  0148  0875               	movf	??___awmod,w
  1093  0149  07F6               	addwf	___awmod@counter,f
  1094  014A                     l1484:
  1095  014A  1FA1               	btfss	___awmod@divisor+1,7
  1096  014B  294D               	goto	u751
  1097  014C  294E               	goto	u750
  1098  014D                     u751:
  1099  014D  293F               	goto	l1480
  1100  014E                     u750:
  1101  014E                     l1486:
  1102  014E  0821               	movf	___awmod@divisor+1,w
  1103  014F  0223               	subwf	___awmod@dividend+1,w
  1104  0150  1D03               	skipz
  1105  0151  2954               	goto	u765
  1106  0152  0820               	movf	___awmod@divisor,w
  1107  0153  0222               	subwf	___awmod@dividend,w
  1108  0154                     u765:
  1109  0154  1C03               	skipc
  1110  0155  2957               	goto	u761
  1111  0156  2958               	goto	u760
  1112  0157                     u761:
  1113  0157  295E               	goto	l1490
  1114  0158                     u760:
  1115  0158                     l1488:
  1116  0158  0820               	movf	___awmod@divisor,w
  1117  0159  02A2               	subwf	___awmod@dividend,f
  1118  015A  0821               	movf	___awmod@divisor+1,w
  1119  015B  1C03               	skipc
  1120  015C  03A3               	decf	___awmod@dividend+1,f
  1121  015D  02A3               	subwf	___awmod@dividend+1,f
  1122  015E                     l1490:
  1123  015E  3001               	movlw	1
  1124  015F                     u775:
  1125  015F  1003               	clrc
  1126  0160  0CA1               	rrf	___awmod@divisor+1,f
  1127  0161  0CA0               	rrf	___awmod@divisor,f
  1128  0162  3EFF               	addlw	-1
  1129  0163  1D03               	skipz
  1130  0164  295F               	goto	u775
  1131  0165                     l1492:
  1132  0165  3001               	movlw	1
  1133  0166  02F6               	subwf	___awmod@counter,f
  1134  0167  1D03               	btfss	3,2
  1135  0168  296A               	goto	u781
  1136  0169  296B               	goto	u780
  1137  016A                     u781:
  1138  016A  294E               	goto	l1486
  1139  016B                     u780:
  1140  016B                     l1494:
  1141  016B  0877               	movf	___awmod@sign,w
  1142  016C  1903               	btfsc	3,2
  1143  016D  296F               	goto	u791
  1144  016E  2970               	goto	u790
  1145  016F                     u791:
  1146  016F  2975               	goto	l1498
  1147  0170                     u790:
  1148  0170                     l1496:
  1149  0170  09A2               	comf	___awmod@dividend,f
  1150  0171  09A3               	comf	___awmod@dividend+1,f
  1151  0172  0AA2               	incf	___awmod@dividend,f
  1152  0173  1903               	skipnz
  1153  0174  0AA3               	incf	___awmod@dividend+1,f
  1154  0175                     l1498:
  1155  0175  0823               	movf	___awmod@dividend+1,w
  1156  0176  00A1               	movwf	?___awmod+1
  1157  0177  0822               	movf	___awmod@dividend,w
  1158  0178  00A0               	movwf	?___awmod
  1159  0179                     l374:
  1160  0179  0008               	return
  1161  017A                     __end_of___awmod:
  1162                           
  1163                           	psect	text5
  1164  00B6                     __ptext5:	
  1165 ;; *************** function ___awdiv *****************
  1166 ;; Defined at:
  1167 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  divisor         2    4[BANK0 ] int 
  1170 ;;  dividend        2    6[BANK0 ] int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  quotient        2   10[BANK0 ] int 
  1173 ;;  sign            1    9[BANK0 ] unsigned char 
  1174 ;;  counter         1    8[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2    4[BANK0 ] int 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       4       0       0       0
  1185 ;;      Locals:         0       4       0       0       0
  1186 ;;      Temps:          1       0       0       0       0
  1187 ;;      Totals:         1       8       0       0       0
  1188 ;;Total ram usage:        9 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_ValoresDisplay
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function ___awdiv
  1200  00B6                     ___awdiv:
  1201  00B6                     l1420:	
  1202                           ;incstack = 0
  1203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1204                           
  1205  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1206  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1207  00B8  01A9               	clrf	___awdiv@sign
  1208  00B9                     l1422:
  1209  00B9  1FA5               	btfss	___awdiv@divisor+1,7
  1210  00BA  28BC               	goto	u611
  1211  00BB  28BD               	goto	u610
  1212  00BC                     u611:
  1213  00BC  28C4               	goto	l1428
  1214  00BD                     u610:
  1215  00BD                     l1424:
  1216  00BD  09A4               	comf	___awdiv@divisor,f
  1217  00BE  09A5               	comf	___awdiv@divisor+1,f
  1218  00BF  0AA4               	incf	___awdiv@divisor,f
  1219  00C0  1903               	skipnz
  1220  00C1  0AA5               	incf	___awdiv@divisor+1,f
  1221  00C2                     l1426:
  1222  00C2  01A9               	clrf	___awdiv@sign
  1223  00C3  0AA9               	incf	___awdiv@sign,f
  1224  00C4                     l1428:
  1225  00C4  1FA7               	btfss	___awdiv@dividend+1,7
  1226  00C5  28C7               	goto	u621
  1227  00C6  28C8               	goto	u620
  1228  00C7                     u621:
  1229  00C7  28D1               	goto	l1434
  1230  00C8                     u620:
  1231  00C8                     l1430:
  1232  00C8  09A6               	comf	___awdiv@dividend,f
  1233  00C9  09A7               	comf	___awdiv@dividend+1,f
  1234  00CA  0AA6               	incf	___awdiv@dividend,f
  1235  00CB  1903               	skipnz
  1236  00CC  0AA7               	incf	___awdiv@dividend+1,f
  1237  00CD                     l1432:
  1238  00CD  3001               	movlw	1
  1239  00CE  00F7               	movwf	??___awdiv
  1240  00CF  0877               	movf	??___awdiv,w
  1241  00D0  06A9               	xorwf	___awdiv@sign,f
  1242  00D1                     l1434:
  1243  00D1  01AA               	clrf	___awdiv@quotient
  1244  00D2  01AB               	clrf	___awdiv@quotient+1
  1245  00D3                     l1436:
  1246  00D3  0824               	movf	___awdiv@divisor,w
  1247  00D4  0425               	iorwf	___awdiv@divisor+1,w
  1248  00D5  1903               	btfsc	3,2
  1249  00D6  28D8               	goto	u631
  1250  00D7  28D9               	goto	u630
  1251  00D8                     u631:
  1252  00D8  2910               	goto	l1456
  1253  00D9                     u630:
  1254  00D9                     l1438:
  1255  00D9  01A8               	clrf	___awdiv@counter
  1256  00DA  0AA8               	incf	___awdiv@counter,f
  1257  00DB  28E7               	goto	l1444
  1258  00DC                     l1440:
  1259  00DC  3001               	movlw	1
  1260  00DD                     u645:
  1261  00DD  1003               	clrc
  1262  00DE  0DA4               	rlf	___awdiv@divisor,f
  1263  00DF  0DA5               	rlf	___awdiv@divisor+1,f
  1264  00E0  3EFF               	addlw	-1
  1265  00E1  1D03               	skipz
  1266  00E2  28DD               	goto	u645
  1267  00E3                     l1442:
  1268  00E3  3001               	movlw	1
  1269  00E4  00F7               	movwf	??___awdiv
  1270  00E5  0877               	movf	??___awdiv,w
  1271  00E6  07A8               	addwf	___awdiv@counter,f
  1272  00E7                     l1444:
  1273  00E7  1FA5               	btfss	___awdiv@divisor+1,7
  1274  00E8  28EA               	goto	u651
  1275  00E9  28EB               	goto	u650
  1276  00EA                     u651:
  1277  00EA  28DC               	goto	l1440
  1278  00EB                     u650:
  1279  00EB                     l1446:
  1280  00EB  3001               	movlw	1
  1281  00EC                     u665:
  1282  00EC  1003               	clrc
  1283  00ED  0DAA               	rlf	___awdiv@quotient,f
  1284  00EE  0DAB               	rlf	___awdiv@quotient+1,f
  1285  00EF  3EFF               	addlw	-1
  1286  00F0  1D03               	skipz
  1287  00F1  28EC               	goto	u665
  1288  00F2  0825               	movf	___awdiv@divisor+1,w
  1289  00F3  0227               	subwf	___awdiv@dividend+1,w
  1290  00F4  1D03               	skipz
  1291  00F5  28F8               	goto	u675
  1292  00F6  0824               	movf	___awdiv@divisor,w
  1293  00F7  0226               	subwf	___awdiv@dividend,w
  1294  00F8                     u675:
  1295  00F8  1C03               	skipc
  1296  00F9  28FB               	goto	u671
  1297  00FA  28FC               	goto	u670
  1298  00FB                     u671:
  1299  00FB  2903               	goto	l1452
  1300  00FC                     u670:
  1301  00FC                     l1448:
  1302  00FC  0824               	movf	___awdiv@divisor,w
  1303  00FD  02A6               	subwf	___awdiv@dividend,f
  1304  00FE  0825               	movf	___awdiv@divisor+1,w
  1305  00FF  1C03               	skipc
  1306  0100  03A7               	decf	___awdiv@dividend+1,f
  1307  0101  02A7               	subwf	___awdiv@dividend+1,f
  1308  0102                     l1450:
  1309  0102  142A               	bsf	___awdiv@quotient,0
  1310  0103                     l1452:
  1311  0103  3001               	movlw	1
  1312  0104                     u685:
  1313  0104  1003               	clrc
  1314  0105  0CA5               	rrf	___awdiv@divisor+1,f
  1315  0106  0CA4               	rrf	___awdiv@divisor,f
  1316  0107  3EFF               	addlw	-1
  1317  0108  1D03               	skipz
  1318  0109  2904               	goto	u685
  1319  010A                     l1454:
  1320  010A  3001               	movlw	1
  1321  010B  02A8               	subwf	___awdiv@counter,f
  1322  010C  1D03               	btfss	3,2
  1323  010D  290F               	goto	u691
  1324  010E  2910               	goto	u690
  1325  010F                     u691:
  1326  010F  28EB               	goto	l1446
  1327  0110                     u690:
  1328  0110                     l1456:
  1329  0110  0829               	movf	___awdiv@sign,w
  1330  0111  1903               	btfsc	3,2
  1331  0112  2914               	goto	u701
  1332  0113  2915               	goto	u700
  1333  0114                     u701:
  1334  0114  291A               	goto	l1460
  1335  0115                     u700:
  1336  0115                     l1458:
  1337  0115  09AA               	comf	___awdiv@quotient,f
  1338  0116  09AB               	comf	___awdiv@quotient+1,f
  1339  0117  0AAA               	incf	___awdiv@quotient,f
  1340  0118  1903               	skipnz
  1341  0119  0AAB               	incf	___awdiv@quotient+1,f
  1342  011A                     l1460:
  1343  011A  082B               	movf	___awdiv@quotient+1,w
  1344  011B  00A5               	movwf	?___awdiv+1
  1345  011C  082A               	movf	___awdiv@quotient,w
  1346  011D  00A4               	movwf	?___awdiv
  1347  011E                     l361:
  1348  011E  0008               	return
  1349  011F                     __end_of___awdiv:
  1350                           
  1351                           	psect	text6
  1352  020C                     __ptext6:	
  1353 ;; *************** function _ArregloNumero *****************
  1354 ;; Defined at:
  1355 ;;		line 180 in file "Postlab8main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  numero          1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  numero          1    7[COMMON] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         3       0       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_ValoresDisplay
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _ArregloNumero
  1385  020C                     _ArregloNumero:
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in _ArregloNumero: [wreg-fsr0h+status,2+status,0]
  1389                           ;ArregloNumero@numero stored from wreg
  1390  020C  00F7               	movwf	ArregloNumero@numero
  1391  020D                     l1098:
  1392                           
  1393                           ;Postlab8main.c: 180: uint8_t ArregloNumero (uint8_t numero);Postlab8main.c: 181: {;Post
      +                          lab8main.c: 182:     switch(numero){
  1394  020D  2A22               	goto	l1168
  1395  020E                     l1100:
  1396                           
  1397                           ;Postlab8main.c: 184:             return 0b00111111;
  1398  020E  303F               	movlw	63
  1399  020F  2A4A               	goto	l99
  1400  0210                     l1106:
  1401                           
  1402                           ;Postlab8main.c: 187:             return 0b00000110;
  1403  0210  3006               	movlw	6
  1404  0211  2A4A               	goto	l99
  1405  0212                     l1112:
  1406                           
  1407                           ;Postlab8main.c: 190:             return 0b01011011;
  1408  0212  305B               	movlw	91
  1409  0213  2A4A               	goto	l99
  1410  0214                     l1118:
  1411                           
  1412                           ;Postlab8main.c: 193:             return 0b01001111;
  1413  0214  304F               	movlw	79
  1414  0215  2A4A               	goto	l99
  1415  0216                     l1124:
  1416                           
  1417                           ;Postlab8main.c: 196:             return 0b01100110;
  1418  0216  3066               	movlw	102
  1419  0217  2A4A               	goto	l99
  1420  0218                     l1130:
  1421                           
  1422                           ;Postlab8main.c: 199:             return 0b01101101;
  1423  0218  306D               	movlw	109
  1424  0219  2A4A               	goto	l99
  1425  021A                     l1136:
  1426                           
  1427                           ;Postlab8main.c: 202:             return 0b01111101;
  1428  021A  307D               	movlw	125
  1429  021B  2A4A               	goto	l99
  1430  021C                     l1142:
  1431                           
  1432                           ;Postlab8main.c: 205:             return 0b00000111;
  1433  021C  3007               	movlw	7
  1434  021D  2A4A               	goto	l99
  1435  021E                     l1148:
  1436                           
  1437                           ;Postlab8main.c: 208:             return 0b01111111;
  1438  021E  307F               	movlw	127
  1439  021F  2A4A               	goto	l99
  1440  0220                     l1154:
  1441                           
  1442                           ;Postlab8main.c: 211:             return 0b01101111;
  1443  0220  306F               	movlw	111
  1444  0221  2A4A               	goto	l99
  1445  0222                     l1168:
  1446  0222  0877               	movf	ArregloNumero@numero,w
  1447  0223  00F5               	movwf	??_ArregloNumero
  1448  0224  01F6               	clrf	??_ArregloNumero+1
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ; direct_byte           11     8 (fixed)
  1457                           ; jumptable            260     6 (fixed)
  1458                           ;	Chosen strategy is simple_byte
  1459  0225  0876               	movf	??_ArregloNumero+1,w
  1460  0226  3A00               	xorlw	0	; case 0
  1461  0227  1903               	skipnz
  1462  0228  2A2A               	goto	l1602
  1463  0229  2A0E               	goto	l1100
  1464  022A                     l1602:
  1465                           
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 10, Range of values is 0 to 9
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte           31    16 (average)
  1471                           ; direct_byte           38     8 (fixed)
  1472                           ; jumptable            260     6 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474  022A  0875               	movf	??_ArregloNumero,w
  1475  022B  3A00               	xorlw	0	; case 0
  1476  022C  1903               	skipnz
  1477  022D  2A0E               	goto	l1100
  1478  022E  3A01               	xorlw	1	; case 1
  1479  022F  1903               	skipnz
  1480  0230  2A10               	goto	l1106
  1481  0231  3A03               	xorlw	3	; case 2
  1482  0232  1903               	skipnz
  1483  0233  2A12               	goto	l1112
  1484  0234  3A01               	xorlw	1	; case 3
  1485  0235  1903               	skipnz
  1486  0236  2A14               	goto	l1118
  1487  0237  3A07               	xorlw	7	; case 4
  1488  0238  1903               	skipnz
  1489  0239  2A16               	goto	l1124
  1490  023A  3A01               	xorlw	1	; case 5
  1491  023B  1903               	skipnz
  1492  023C  2A18               	goto	l1130
  1493  023D  3A03               	xorlw	3	; case 6
  1494  023E  1903               	skipnz
  1495  023F  2A1A               	goto	l1136
  1496  0240  3A01               	xorlw	1	; case 7
  1497  0241  1903               	skipnz
  1498  0242  2A1C               	goto	l1142
  1499  0243  3A0F               	xorlw	15	; case 8
  1500  0244  1903               	skipnz
  1501  0245  2A1E               	goto	l1148
  1502  0246  3A01               	xorlw	1	; case 9
  1503  0247  1903               	skipnz
  1504  0248  2A20               	goto	l1154
  1505  0249  2A0E               	goto	l1100
  1506  024A                     l99:
  1507  024A  0008               	return
  1508  024B                     __end_of_ArregloNumero:
  1509                           
  1510                           	psect	text7
  1511  02AA                     __ptext7:	
  1512 ;; *************** function _Displayturno *****************
  1513 ;; Defined at:
  1514 ;;		line 219 in file "Postlab8main.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0
  1530 ;;      Temps:          2       0       0       0       0
  1531 ;;      Totals:         2       0       0       0       0
  1532 ;;Total ram usage:        2 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function _Displayturno
  1544  02AA                     _Displayturno:
  1545  02AA                     l956:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _Displayturno: [wreg-fsr0h+status,2+status,0]
  1548                           
  1549                           
  1550                           ;Postlab8main.c: 221:     switch(turno){
  1551  02AA  2AB5               	goto	l966
  1552  02AB                     l114:	
  1553                           ;Postlab8main.c: 222:         case 0:
  1554                           
  1555                           
  1556                           ;Postlab8main.c: 223:             turno = 1 ;
  1557  02AB  01F8               	clrf	_turno
  1558  02AC  0AF8               	incf	_turno,f
  1559                           
  1560                           ;Postlab8main.c: 224:             break;
  1561  02AD  2AC8               	goto	l119
  1562  02AE                     l958:
  1563                           
  1564                           ;Postlab8main.c: 226:             turno = 2 ;
  1565  02AE  3002               	movlw	2
  1566  02AF  00F5               	movwf	??_Displayturno
  1567  02B0  0875               	movf	??_Displayturno,w
  1568  02B1  00F8               	movwf	_turno
  1569                           
  1570                           ;Postlab8main.c: 227:             break;
  1571  02B2  2AC8               	goto	l119
  1572  02B3                     l960:
  1573                           
  1574                           ;Postlab8main.c: 229:             turno = 0 ;
  1575  02B3  01F8               	clrf	_turno
  1576                           
  1577                           ;Postlab8main.c: 230:             break;
  1578  02B4  2AC8               	goto	l119
  1579  02B5                     l966:
  1580  02B5  0878               	movf	_turno,w
  1581  02B6  00F5               	movwf	??_Displayturno
  1582  02B7  01F6               	clrf	??_Displayturno+1
  1583                           
  1584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 1, Range of values is 0 to 0
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte            4     3 (average)
  1590                           ; direct_byte           11     8 (fixed)
  1591                           ; jumptable            260     6 (fixed)
  1592                           ;	Chosen strategy is simple_byte
  1593  02B8  0876               	movf	??_Displayturno+1,w
  1594  02B9  3A00               	xorlw	0	; case 0
  1595  02BA  1903               	skipnz
  1596  02BB  2ABD               	goto	l1604
  1597  02BC  2AB3               	goto	l960
  1598  02BD                     l1604:
  1599                           
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 3, Range of values is 0 to 2
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte           10     6 (average)
  1605                           ; direct_byte           17     8 (fixed)
  1606                           ; jumptable            260     6 (fixed)
  1607                           ;	Chosen strategy is simple_byte
  1608  02BD  0875               	movf	??_Displayturno,w
  1609  02BE  3A00               	xorlw	0	; case 0
  1610  02BF  1903               	skipnz
  1611  02C0  2AAB               	goto	l114
  1612  02C1  3A01               	xorlw	1	; case 1
  1613  02C2  1903               	skipnz
  1614  02C3  2AAE               	goto	l958
  1615  02C4  3A03               	xorlw	3	; case 2
  1616  02C5  1903               	skipnz
  1617  02C6  2AB3               	goto	l960
  1618  02C7  2AB3               	goto	l960
  1619  02C8                     l119:
  1620  02C8  0008               	return
  1621  02C9                     __end_of_Displayturno:
  1622                           
  1623                           	psect	text8
  1624  017A                     __ptext8:	
  1625 ;; *************** function _isr *****************
  1626 ;; Defined at:
  1627 ;;		line 62 in file "Postlab8main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          5       0       0       0       0
  1644 ;;      Totals:         5       0       0       0       0
  1645 ;;Total ram usage:        5 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		Interrupt level 1
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _isr
  1656  017A                     _isr:
  1657  017A                     i1l1280:
  1658                           
  1659                           ;Postlab8main.c: 64:      if(PIR1bits.ADIF)
  1660  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1661  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1662  017C  1F0C               	btfss	12,6	;volatile
  1663  017D  297F               	goto	u52_21
  1664  017E  2980               	goto	u52_20
  1665  017F                     u52_21:
  1666  017F  2992               	goto	i1l69
  1667  0180                     u52_20:
  1668  0180                     i1l1282:
  1669                           
  1670                           ;Postlab8main.c: 65:     {;Postlab8main.c: 66:          if(ADCON0bits.CHS == 6)
  1671  0180  0C1F               	rrf	31,w	;volatile
  1672  0181  00F0               	movwf	??_isr
  1673  0182  0C70               	rrf	??_isr,w
  1674  0183  390F               	andlw	15
  1675  0184  3A06               	xorlw	6
  1676  0185  1D03               	skipz
  1677  0186  2988               	goto	u53_21
  1678  0187  2989               	goto	u53_20
  1679  0188                     u53_21:
  1680  0188  298C               	goto	i1l1286
  1681  0189                     u53_20:
  1682  0189                     i1l1284:
  1683                           
  1684                           ;Postlab8main.c: 67:              PORTA = ADRESH;
  1685  0189  081E               	movf	30,w	;volatile
  1686  018A  0085               	movwf	5	;volatile
  1687  018B  2990               	goto	i1l1288
  1688  018C                     i1l1286:
  1689                           
  1690                           ;Postlab8main.c: 69:              cuenta = ADRESH;
  1691  018C  081E               	movf	30,w	;volatile
  1692  018D  00F0               	movwf	??_isr
  1693  018E  0870               	movf	??_isr,w
  1694  018F  00B9               	movwf	_cuenta
  1695  0190                     i1l1288:
  1696                           
  1697                           ;Postlab8main.c: 71:          PIR1bits.ADIF = 0;
  1698  0190  130C               	bcf	12,6	;volatile
  1699                           
  1700                           ;Postlab8main.c: 72:     }
  1701  0191  29C0               	goto	i1l80
  1702  0192                     i1l69:	
  1703                           ;Postlab8main.c: 73:      else if(INTCONbits.T0IF)
  1704                           
  1705  0192  1D0B               	btfss	11,2	;volatile
  1706  0193  2995               	goto	u54_21
  1707  0194  2996               	goto	u54_20
  1708  0195                     u54_21:
  1709  0195  29C0               	goto	i1l80
  1710  0196                     u54_20:
  1711  0196                     i1l1290:
  1712                           
  1713                           ;Postlab8main.c: 74:      {;Postlab8main.c: 75:          INTCONbits.T0IF = 0;
  1714  0196  110B               	bcf	11,2	;volatile
  1715  0197                     i1l1292:
  1716                           
  1717                           ;Postlab8main.c: 76:          PORTD = 0;
  1718  0197  0188               	clrf	8	;volatile
  1719  0198                     i1l1294:
  1720                           
  1721                           ;Postlab8main.c: 77:          TMR0 = 131;
  1722  0198  3083               	movlw	131
  1723  0199  0081               	movwf	1	;volatile
  1724                           
  1725                           ;Postlab8main.c: 80:          switch(turno){
  1726  019A  29AD               	goto	i1l1308
  1727  019B                     i1l1296:
  1728                           
  1729                           ;Postlab8main.c: 82:                 PORTC = display0;
  1730  019B  0835               	movf	_display0,w
  1731  019C  0087               	movwf	7	;volatile
  1732                           
  1733                           ;Postlab8main.c: 83:                 PORTD = 0b001;
  1734  019D  3001               	movlw	1
  1735  019E  0088               	movwf	8	;volatile
  1736                           
  1737                           ;Postlab8main.c: 84:                 break;
  1738  019F  29C0               	goto	i1l80
  1739  01A0                     i1l1298:
  1740                           
  1741                           ;Postlab8main.c: 86:                 PORTC = display1;
  1742  01A0  0834               	movf	_display1,w
  1743  01A1  0087               	movwf	7	;volatile
  1744                           
  1745                           ;Postlab8main.c: 87:                 PORTD = 0b010;
  1746  01A2  3002               	movlw	2
  1747  01A3  0088               	movwf	8	;volatile
  1748                           
  1749                           ;Postlab8main.c: 88:                 break;
  1750  01A4  29C0               	goto	i1l80
  1751  01A5                     i1l1300:
  1752                           
  1753                           ;Postlab8main.c: 90:                 PORTC = display2 + 0b10000000;
  1754  01A5  0833               	movf	_display2,w
  1755  01A6  3E80               	addlw	128
  1756  01A7  0087               	movwf	7	;volatile
  1757  01A8                     i1l1302:
  1758                           
  1759                           ;Postlab8main.c: 91:                 PORTD = 0b100;
  1760  01A8  3004               	movlw	4
  1761  01A9  0088               	movwf	8	;volatile
  1762                           
  1763                           ;Postlab8main.c: 92:                 break;
  1764  01AA  29C0               	goto	i1l80
  1765  01AB                     i1l1304:
  1766                           
  1767                           ;Postlab8main.c: 94:                 turno = 0;
  1768  01AB  01F8               	clrf	_turno
  1769                           
  1770                           ;Postlab8main.c: 95:                 break;
  1771  01AC  29C0               	goto	i1l80
  1772  01AD                     i1l1308:
  1773  01AD  0878               	movf	_turno,w
  1774  01AE  00F0               	movwf	??_isr
  1775  01AF  01F1               	clrf	??_isr+1
  1776                           
  1777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 1, Range of values is 0 to 0
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte            4     3 (average)
  1783                           ; direct_byte           11     8 (fixed)
  1784                           ; jumptable            260     6 (fixed)
  1785                           ;	Chosen strategy is simple_byte
  1786  01B0  0871               	movf	??_isr+1,w
  1787  01B1  3A00               	xorlw	0	; case 0
  1788  01B2  1903               	skipnz
  1789  01B3  29B5               	goto	i1l1606
  1790  01B4  29AB               	goto	i1l1304
  1791  01B5                     i1l1606:
  1792                           
  1793                           ; Switch size 1, requested type "simple"
  1794                           ; Number of cases is 3, Range of values is 0 to 2
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte           10     6 (average)
  1798                           ; direct_byte           17     8 (fixed)
  1799                           ; jumptable            260     6 (fixed)
  1800                           ;	Chosen strategy is simple_byte
  1801  01B5  0870               	movf	??_isr,w
  1802  01B6  3A00               	xorlw	0	; case 0
  1803  01B7  1903               	skipnz
  1804  01B8  299B               	goto	i1l1296
  1805  01B9  3A01               	xorlw	1	; case 1
  1806  01BA  1903               	skipnz
  1807  01BB  29A0               	goto	i1l1298
  1808  01BC  3A03               	xorlw	3	; case 2
  1809  01BD  1903               	skipnz
  1810  01BE  29A5               	goto	i1l1300
  1811  01BF  29AB               	goto	i1l1304
  1812  01C0                     i1l80:
  1813  01C0  0874               	movf	??_isr+4,w
  1814  01C1  008A               	movwf	10
  1815  01C2  0873               	movf	??_isr+3,w
  1816  01C3  0084               	movwf	4
  1817  01C4  0E72               	swapf	??_isr+2,w
  1818  01C5  0083               	movwf	3
  1819  01C6  0EFE               	swapf	btemp,f
  1820  01C7  0E7E               	swapf	btemp,w
  1821  01C8  0009               	retfie
  1822  01C9                     __end_of_isr:
  1823  007E                     btemp	set	126	;btemp
  1824  007E                     wtemp0	set	126
  1825                           
  1826                           	psect	intentry
  1827  0004                     __pintentry:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1830                           
  1831  0004                     interrupt_function:
  1832  007E                     saved_w	set	btemp
  1833  0004  00FE               	movwf	btemp
  1834  0005  0E03               	swapf	3,w
  1835  0006  00F2               	movwf	??_isr+2
  1836  0007  0804               	movf	4,w
  1837  0008  00F3               	movwf	??_isr+3
  1838  0009  080A               	movf	10,w
  1839  000A  00F4               	movwf	??_isr+4
  1840  000B  120A  118A  297A   	ljmp	_isr
  1841                           
  1842                           	psect	config
  1843                           
  1844                           ;Config register CONFIG1 @ 0x2007
  1845                           ;	Oscillator Selection bits
  1846                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1847                           ;	Watchdog Timer Enable bit
  1848                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1849                           ;	Power-up Timer Enable bit
  1850                           ;	PWRTE = OFF, PWRT disabled
  1851                           ;	RE3/MCLR pin function select bit
  1852                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1853                           ;	Code Protection bit
  1854                           ;	CP = OFF, Program memory code protection is disabled
  1855                           ;	Data Code Protection bit
  1856                           ;	CPD = OFF, Data memory code protection is disabled
  1857                           ;	Brown Out Reset Selection bits
  1858                           ;	BOREN = OFF, BOR disabled
  1859                           ;	Internal External Switchover bit
  1860                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1861                           ;	Fail-Safe Clock Monitor Enabled bit
  1862                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1863                           ;	Low Voltage Programming Enable bit
  1864                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1865                           ;	In-Circuit Debugger Mode bit
  1866                           ;	DEBUG = 0x1, unprogrammed default
  1867  2007                     	org	8199
  1868  2007  20D4               	dw	8404
  1869                           
  1870                           ;Config register CONFIG2 @ 0x2008
  1871                           ;	Brown-out Reset Selection bit
  1872                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1873                           ;	Flash Program Memory Self Write Enable bits
  1874                           ;	WRT = OFF, Write protection off
  1875  2008                     	org	8200
  1876  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     17      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _ValoresDisplay->_ArregloNumero
    _ValoresDisplay->___awdiv
    _ValoresDisplay->___awmod
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ValoresDisplay
    _ValoresDisplay->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2181
                                             16 BANK0      1     1      0
                       _Displayturno
                     _ValoresDisplay
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ValoresDisplay                                       4     4      0    2181
                                             12 BANK0      4     4      0
                      _ArregloNumero
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              5 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              7 COMMON     1     1      0
                                              4 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ArregloNumero                                        3     3      0      22
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Displayturno                                         2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Displayturno
   _ValoresDisplay
     _ArregloNumero
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 12:20:10 2021

         ??_Displayturno 0075                       l94 020B                       l99 024A  
           ___awdiv@sign 0029      ___wmul@multiplicand 0022                      l114 02AB  
                    l210 02A9                      l122 00B5                      l119 02C8  
                    l208 0291                      l361 011E                      l374 0179  
                    l900 01D9                      l910 01E5                      l902 01DA  
                    l920 01EC                      l912 01E8                      l904 01DB  
                    l930 01F1                      l922 01ED                      l914 01E9  
                    l906 01E1                      l940 0205                      l932 01F2  
                    l924 01EE                      l916 01EA                      l908 01E2  
                    l942 0206                      l934 01F6                      l926 01EF  
                    l918 01EB                      l960 02B3                      l936 01F9  
                    l928 01F0                      l938 01FA                      l890 01CE  
                    l956 02AA                      l892 01D1                      l958 02AE  
                    l966 02B5                      l894 01D2                      l886 01C9  
                    l896 01D5                      l888 01CD                      l898 01D8  
                    u600 02A5                      u601 02A4                      u610 00BD  
                    u611 00BC                      u700 0115                      u620 00C8  
                    u701 0114                      u621 00C7                      u630 00D9  
                    u710 0126                      u631 00D8                      u711 0125  
                    u720 0131                      u800 0263                      u721 0130  
                    u801 0262                      u650 00EB                      u730 013C  
                    u570 028B                      u810 026C                      u651 00EA  
                    u731 013B                      u571 028A                      u811 026B  
                    u645 00DD                      u670 00FC                      u750 014E  
                    u671 00FB                      u751 014D                      u760 0158  
                    u665 00EC                      u761 0157                      u745 0140  
                    u585 0292                      u690 0110                      u691 010F  
                    u675 00F8                      u595 0299                      u827 0279  
                    u780 016B                      u685 0104                      u781 016A  
                    u765 0154                      u837 0208                      u790 0170  
                    u791 016F                      u775 015F                      _isr 017A  
                    fsr0 0004             ___awmod@sign 0077                     l1100 020E  
                   l1112 0212                     l1130 0218                     l1106 0210  
                   l1124 0216                     l1142 021C                     l1118 0214  
                   l1136 021A                     l1154 0220                     l1410 028B  
                   l1148 021E                     l1420 00B6                     l1412 0298  
                   l1430 00C8                     l1422 00B9                     l1414 029F  
                   l1406 0283                     l1502 0021                     l1168 0222  
                   l1440 00DC                     l1432 00CD                     l1424 00BD  
                   l1416 02A5                     l1408 0285                     l1504 0094  
                   l1520 025D                     l1512 024B                     l1602 022A  
                   l1098 020D                     l1450 0102                     l1442 00E3  
                   l1434 00D1                     l1426 00C2                     l1506 009F  
                   l1530 027C                     l1522 0263                     l1514 0250  
                   l1604 02BD                     l1460 011A                     l1452 0103  
                   l1444 00E7                     l1436 00D3                     l1428 00C4  
                   l1508 00AA                     l1524 026C                     l1516 0253  
                   l1454 010A                     l1446 00EB                     l1438 00D9  
                   l1470 012B                     l1526 0271                     l1518 0258  
                   l1448 00FC                     l1456 0110                     l1480 013F  
                   l1472 012D                     l1464 011F                     l1528 0275  
                   l1458 0115                     l1490 015E                     l1482 0146  
                   l1474 0131                     l1466 0120                     l1492 0165  
                   l1484 014A                     l1476 0136                     l1468 0126  
                   l1486 014E                     l1478 013C                     l1494 016B  
                   l1496 0170                     l1488 0158                     l1498 0175  
                   ?_isr 0070                     i1l80 01C0                     i1l69 0192  
                   _TMR0 0001                     _main 024B                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 011F          __end_of___awmod 017A                    _ANSEL 0188  
        ___awdiv@divisor 0024          ___awdiv@counter 0028                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u52_20 0180                    u52_21 017F                    u53_20 0189  
                  u53_21 0188                    u54_20 0196                    u54_21 0195  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089  __size_of_ValoresDisplay 0095                    _setup 01C9  
                  _turno 0078                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0283  
                 ??_main 0030                   _ADRESH 001E         ___awdiv@dividend 0026  
ValoresDisplay@cociente0 002E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1300 01A5                   i1l1302 01A8                   i1l1304 01AB  
                 i1l1308 01AD                   i1l1280 017A                   i1l1290 0196  
                 i1l1282 0180                   i1l1292 0197                   i1l1284 0189  
                 i1l1606 01B5                   i1l1294 0198                   i1l1286 018C  
                 i1l1296 019B                   i1l1288 0190                   i1l1298 01A0  
   __end_of_Displayturno 02C9                   ___wmul 0283                ??___awdiv 0077  
              ??___awmod 0075                   _cuenta 0039         ___awdiv@quotient 002A  
        ___awmod@divisor 0020          ___awmod@counter 0076                   saved_w 007E  
__end_of__initialization 001D           __pcstackCOMMON 0070            __end_of_setup 020C  
         _OPTION_REGbits 0081           _ValoresDisplay 0021                  ??_setup 0075  
             __pbssBANK0 0031    __end_of_ArregloNumero 024B               __pmaintext 024B  
                ?___wmul 0020               __pintentry 0004   __end_of_ValoresDisplay 00B6  
  __size_of_Displayturno 001F                  ___awdiv 00B6                  ___awmod 011F  
        __size_of___wmul 0027                  _decenas 0037             _Displayturno 02AA  
                __ptext1 01C9                  __ptext2 0021                  __ptext3 0283  
                __ptext4 011F                  __ptext5 00B6                  __ptext6 020C  
                __ptext7 02AA                  __ptext8 017A                  _cuenta2 0031  
           __size_of_isr 004F          ?_ValoresDisplay 0070         ___awmod@dividend 0022  
   end_of_initialization 001D           __end_of___wmul 02AA      start_initialization 0011  
            __end_of_isr 01C9                 ??___wmul 0075              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0024  
               ?___awmod 0020         ??_ValoresDisplay 002C   __size_of_ArregloNumero 003F  
         __size_of_setup 0043      ArregloNumero@numero 0077        interrupt_function 0004  
         ___wmul@product 0075                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
          _ArregloNumero 020C         __size_of___awdiv 0069         __size_of___awmod 005B  
               _centenas 0036                 _display0 0035                 _display1 0034  
               _display2 0033            __size_of_main 0038           ?_ArregloNumero 0070  
               _unidades 0038               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            ?_Displayturno 0070          ??_ArregloNumero 0075  
